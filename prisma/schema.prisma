generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model contract {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id String   @db.Uuid
  user_id    String   @db.Uuid
  start_date DateTime @db.Date
  end_date   DateTime @db.Date
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order      order[]
}

model delivery {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id      String   @db.Uuid
  user_id       String   @db.Uuid
  delivery_date DateTime @db.Date
  status        String   @db.VarChar(50)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  order         order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model market_trend {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id String   @db.Uuid
  user_id    String   @db.Uuid
  trend_date DateTime @db.Date
  trend_data String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contract_id String     @db.Uuid
  user_id     String     @db.Uuid
  order_date  DateTime   @db.Date
  status      String     @db.VarChar(50)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  delivery    delivery[]
  contract    contract   @relation(fields: [contract_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  company      company[]
  contract     contract[]
  delivery     delivery[]
  market_trend market_trend[]
  order        order[]
  organization organization[]
}
